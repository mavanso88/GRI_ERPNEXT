# Base setup
ARG PYTHON_VERSION=3.11.6
ARG DEBIAN_BASE=bookworm
FROM python:${PYTHON_VERSION}-slim-${DEBIAN_BASE} AS base

ARG WKHTMLTOPDF_VERSION=0.12.6.1-3
ARG WKHTMLTOPDF_DISTRO=bookworm
ARG NODE_VERSION=18.18.2
ENV NVM_DIR=/home/frappe/.nvm
ENV PATH=${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}

# Add frappe user
RUN useradd -ms /bin/bash frappe

# Update package list
RUN apt-get update

# Install essential packages
RUN apt-get install --no-install-recommends -y curl \
    git \
    vim \
    nginx \
    gettext-base \
    file \
    libpango-1.0-0 \
    libharfbuzz0b \
    libpangoft2-1.0-0 \
    libpangocairo-1.0-0 \
    restic \
    gpg \
    default-mysql-client \
    less \
    libpq-dev \
    postgresql-client \
    wait-for-it \
    jq

# Install Node.js and Yarn directly without nvm
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g yarn

# Install wkhtmltopdf with patched qt
RUN if [ "$(uname -m)" = "aarch64" ]; then export ARCH=arm64; fi && \
    if [ "$(uname -m)" = "x86_64" ]; then export ARCH=amd64; fi && \
    downloaded_file=wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb && \
    curl -sLO https://github.com/wkhtmltopdf/packaging/releases/download/$WKHTMLTOPDF_VERSION/$downloaded_file && \
    apt-get install -y ./$downloaded_file && \
    rm $downloaded_file

# Clean up APT and add permissions for frappe user
RUN rm -rf /var/lib/apt/lists/* && \
    rm -fr /etc/nginx/sites-enabled/default && \
    pip3 install frappe-bench && \
    sed -i '/user www-data/d' /etc/nginx/nginx.conf && \
    ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log && \
    touch /run/nginx.pid && \
    chown -R frappe:frappe /etc/nginx/conf.d && \
    chown -R frappe:frappe /etc/nginx/nginx.conf && \
    chown -R frappe:frappe /var/log/nginx && \
    chown -R frappe:frappe /var/lib/nginx && \
    chown -R frappe:frappe /run/nginx.pid

COPY resources/nginx-template.conf /templates/nginx/frappe.conf.template
COPY resources/nginx-entrypoint.sh /usr/local/bin/nginx-entrypoint.sh

# Copy start.sh script to handle site creation at runtime
COPY start.sh /home/frappe/start.sh
RUN chmod +x /home/frappe/start.sh

# Other stages for build and setting up ERPNext
FROM base AS build

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    wget \
    libffi-dev \
    liblcms2-dev \
    libsasl2-dev \
    libtiff5-dev \
    libwebp-dev \
    redis-tools \
    rlwrap \
    tk8.6-dev \
    cron \
    gcc \
    build-essential \
    libbz2-dev && \
    rm -rf /var/lib/apt/lists/*

USER frappe

# Fetch Frappe and ERPNext source code
FROM build AS builder

ARG FRAPPE_BRANCH=version-15
ARG FRAPPE_PATH=https://github.com/frappe/frappe
ARG ERPNEXT_REPO=https://github.com/frappe/erpnext
ARG ERPNEXT_BRANCH=version-15
RUN bench init \
  --frappe-branch=${FRAPPE_BRANCH} \
  --frappe-path=${FRAPPE_PATH} \
  --no-procfile \
  --no-backups \
  --skip-redis-config-generation \
  --verbose \
  /home/frappe/frappe-bench && \
  cd /home/frappe/frappe-bench && \
  bench get-app --branch=${ERPNEXT_BRANCH} --resolve-deps erpnext ${ERPNEXT_REPO} && \
  echo "{}" > sites/common_site_config.json && \
  find apps -mindepth 1 -path "*/.git" | xargs rm -fr

FROM base AS erpnext

USER frappe

COPY --from=builder --chown=frappe:frappe /home/frappe/frappe-bench /home/frappe/frappe-bench

WORKDIR /home/frappe/frappe-bench

VOLUME [ \
  "/home/frappe/frappe-bench/sites", \
  "/home/frappe/frappe-bench/sites/assets", \
  "/home/frappe/frappe-bench/logs" \
]

# Run start.sh as entrypoint to handle site creation
ENTRYPOINT ["/home/frappe/start.sh"]

CMD [ \
  "/home/frappe/frappe-bench/env/bin/gunicorn", \
  "--chdir=/home/frappe/frappe-bench/sites", \
  "--bind=0.0.0.0:8000", \
  "--threads=4", \
  "--workers=2", \
  "--worker-class=gthread", \
  "--worker-tmp-dir=/dev/shm", \
  "--timeout=120", \
  "--preload", \
  "frappe.app:application" \
]
